name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: ${{ matrix.lisp }} on ${{ matrix.os }}
    strategy:
      matrix:
        lisp: [sbcl-bin]
        os: [ubuntu-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:

    - uses: actions/checkout@v3

    - name: system version
      run: |
        uname -a

    - name: set up for cache
      id: current-month
      run: |
        sudo mkdir -p /usr/local/etc/roswell
        sudo chown "${USER}" /usr/local/etc/roswell
        # Here the ros binary will be restored:
        sudo chown "${USER}" /usr/local/bin
        echo "::set-output name=value::$(date -u "+%Y-%m")"

    - name: Cache roswell
      id: cache
      uses: actions/cache@v3
      env:
        cache-name: cache-roswell
      with:
        path: |
          /usr/local/bin/ros
          ~/.cache/common-lisp/
          ~/.roswell
          /usr/local/etc/roswell
          .qlot
        key: "${{ steps.current-month.outputs.value }}-${{ runner.os }}-${{ matrix.lisp }}-${{ env.cache-name }}-${{ hashFiles('qlfile.lock') }}"
        restore-keys: |
          ${{ steps.current-month.outputs.value }}-${{ runner.os }}-${{ matrix.lisp }}-
          ${{ steps.current-month.outputs.value }}-${{ runner.os }}-

    - name: Restore cache
      run: |
        echo $HOME/.roswell/bin >> $GITHUB_PATH
        echo .qlot/bin >> $GITHUB_PATH
      if: steps.cache.outputs.cache-hit == 'true'

    - name: setup cl
      if: steps.cache.outputs.cache-hit != 'true'
      uses: 40ants/setup-lisp@v2
#      with:
#        asdf-system: ci-test

    - name: run lisp
      continue-on-error: true
      run: |
        echo 1
        echo "path=$PATH"
        ros -e '(format t "~a:~a on ~a~%...~%~%" (lisp-implementation-type) (lisp-implementation-version) (machine-type))'
        echo 3
        ros -e '(format t " fixnum bits:~a~%" (integer-length most-positive-fixnum))'
        ros -e "(format t \"tf = ~s~%\" (ql:where-is-system 'trivial-features))"
        ros -e '(format t "init features = ~s~%" *features*)'
        ros -e "(ql:quickload 'trivial-features)" -e '(format t "features = ~s~%" *features*)'

    - name: clear fasl cache
      run: |
        rm -rf ~/.cache/common-lisp/
        mkdir -p ~/.cache/common-lisp/

    - name: load code from clean fasl cache
      uses: 40ants/run-tests@v2
      with:
        asdf-system: 3bmd-tests

    - name: load from fasls
      uses: 40ants/run-tests@v2
      with:
        asdf-system: 3bmd-tests

    - name: extension tests
      uses: 40ants/run-tests@v2
      with:
        asdf-system: 3bmd-youtube-tests
